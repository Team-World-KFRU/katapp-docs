# Represents the deployment pipeline executed only when an update is pushed to the main branch.
name: Deploy

# Execute this pipeline exclusively on the main branch.
on:
  push:
    branches:
      # Exclude main branch.
      - '!main'

      # Include all feature branches.
      - 'feature/*'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages.
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

# Default all job steps to run in bash.
defaults:
  run:
    shell: bash

# Defines the jobs included in this pipeline.
jobs:

  # Job: build
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.111.3
    steps:

      # Step 1: Install Hugo.
      - name: Install Hugo
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      
      # Step 2: Install more dependencies.
      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded

      # Step 3: Checkout the source code.
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      # Step 4: Setup GitHub pages.
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      # Step 5: Install Node.js dependencies.
      - name: Install Node.js dependencies
        run: '[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true'

      # Step 6: Build Hugo site.
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"   

      # Step 7: Upload build artifacts. 
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public
